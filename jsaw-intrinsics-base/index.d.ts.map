{"mappings":"AACA,OAAO,MAAM,UAAU,CAAC,CAAC,EAAE,MAAM,EAAC,CAAC,EAAE,MAAM,KAAK,MAAgF,CAAC;AACjI,OAAO,MAAM,UAAU,CAAC,CAAC,EAAE,MAAM,EAAC,CAAC,EAAE,MAAM,KAAK,MAAgF,CAAC;AACjI,OAAO,MAAM,SAAS,CAAC,CAAC,EAAE,MAAM,EAAC,CAAC,EAAE,MAAM,KAAK,MAA+E,CAAC;AAC/H,OAAO,MAAM,SAAS,CAAC,CAAC,EAAE,MAAM,EAAC,CAAC,EAAE,MAAM,KAAK,OAAkF,CAAC;AAClI,OAAO,MAAM,UAAU,CAAC,CAAC,EAAE,MAAM,EAAC,CAAC,EAAE,MAAM,KAAK,MAAgF,CAAC;AACjI,OAAO,MAAM,UAAU,CAAC,CAAC,EAAE,MAAM,EAAC,CAAC,EAAE,MAAM,KAAK,MAAiF,CAAC;AAClI,OAAO,MAAM,UAAU,CAAC,CAAC,EAAE,MAAM,EAAC,CAAC,EAAE,MAAM,KAAK,MAAgF,CAAC;AACjI,OAAO,MAAM,WAAW,CAAC,CAAC,EAAE,MAAM,EAAC,CAAC,EAAE,MAAM,KAAK,MAA0F,CAAC;AAC5I,OAAO,MAAM,eAAe,CAAC,CAAC,EAAE,MAAM,KAAK,MAA6E,CAAA;AACxH,OAAO,MAAM,eAAe,CAAC,CAAC,EAAE,MAAM,KAAK,MAA4E,CAAA;AACvH,OAAO,MAAM,kBAAkB,CAAC,CAAC,EAAE,QAAQ,KAAK,QAAmF,CAAA;AACnI,OAAO,MAAM,iBAAiB,CAAC,CAAC,EAAE,MAAM,KAAK,MAA+E,CAAA;AAC5H,OAAO,MAAM,iBAAiB,CAAC,CAAC,EAAE,MAAM,KAAK,MAA8E,CAAA;AAC3H,OAAO,MAAM,oBAAoB,CAAC,CAAC,EAAE,QAAQ,KAAK,QAAqF,CAAA;AACvI,OAAO,MAAM,UAAU,MAAM,IAA2D,CAAA","sources":["jsaw-intrinsics-base/jsaw-intrinsics-base/index.ts","jsaw-intrinsics-base/index.ts"],"sourcesContent":[null,"\nexport const fast_add: (a: number,b: number) => number = (globalThis as any)['~Natives_fast_add'] ?? ((a: any, b: any) => a + b);\nexport const fast_and: (a: number,b: number) => number = (globalThis as any)['~Natives_fast_and'] ?? ((a: any, b: any) => a & b);\nexport const fast_or: (a: number,b: number) => number = (globalThis as any)['~Natives_fast_or'] ?? ((a: any, b: any) => a | b);\nexport const fast_eq: (a: number,b: number) => boolean = (globalThis as any)['~Natives_fast_eq'] ?? ((a: any, b: any) => a === b);\nexport const fast_sub: (a: number,b: number) => number = (globalThis as any)['~Natives_fast_sub'] ?? ((a: any, b: any) => a - b);\nexport const fast_shl: (a: number,b: number) => number = (globalThis as any)['~Natives_fast_shl'] ?? ((a: any, b: any) => a << b);\nexport const fast_mul: (a: number,b: number) => number = (globalThis as any)['~Natives_fast_mul'] ?? ((a: any, b: any) => a * b);\nexport const fast_imul: (a: number,b: number) => number = (globalThis as any)['~Natives_fast_imul'] ?? ((a: any, b: any) => Math.imul(a,b));\nexport const assert_string: (a: string) => string =  (globalThis as any)['~Natives_assert_string'] ?? ((a: string) => a)\nexport const assert_number: (a: number) => number = (globalThis as any)['~Natives_assert_number'] ??( (a: number) => a)\nexport const assert_static_fn: (a: Function) => Function = (globalThis as any)['~Natives_assert_static_fn'] ?? ((a: Function) => a)\nexport const comptime_string: (a: string) => string =  (globalThis as any)['~Natives_comptime_string'] ?? ((a: string) => a)\nexport const comptime_number: (a: number) => number = (globalThis as any)['~Natives_comptime_number'] ??( (a: number) => a)\nexport const comptime_static_fn: (a: Function) => Function = (globalThis as any)['~Natives_comptime_static_fn'] ?? ((a: Function) => a)\nexport const inlineme: () => void = (globalThis as any)['~Natives_inlineme'] ?? (()=>{})\n    "],"names":[],"version":3,"file":"index.d.ts.map"}